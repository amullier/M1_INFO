module Balance
	use import int.Int
	use import array.Array

	predicate spec (b:array int) (m n : int) (w lb : int) = 
	0<= m <= lb < n <= b.lenght /\ b[lb] < w
	(forall i. m<= i < n -> (i <> lb -> b[i] = w))

	let solve3 (b : array int) (ghost w:int) (ghost lb:int) : int =
		requires{ spec b 0 2 w lb}
		ensures { result = lb}
		if b[m] = b[m+1] then m
		else m+1

	let solve8 (b : array int) (ghost w:int) (ghost lb:int) : int =
		requires{ spec b 0 8 w lb}
		ensures { result = lb}
		if b[1] + b[2]  =  b[3]+b[4] then
		begin
			if b[6] < b[7] then 6 else 7
		end
		else if b[0] + b[1] + b[2]  <  b[3]+b[4]+b[5]then
		begin
			solve3 b 0 w lb
		end
		else
		begin
			solve3 b 3 w lb
		end
	
end